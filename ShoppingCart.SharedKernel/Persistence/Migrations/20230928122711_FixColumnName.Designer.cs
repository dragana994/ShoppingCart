// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShoppingCart.SharedKernel.Persistence;

#nullable disable

namespace ShoppingCart.SharedKernel.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230928122711_FixColumnName")]
    partial class FixColumnName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.Cart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uuid");

                    b.Property<int>("PartId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("PartId");

                    b.ToTable("CartItem", (string)null);
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Customer_1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Customer_2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Customer_3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Customer_4"
                        });
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.ToTable("Employee", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Employee_1",
                            Status = 0,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Employee_2",
                            Status = 0,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Employee_3",
                            Status = 0,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Employee_4",
                            Status = 1,
                            StoreId = 1
                        });
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Part", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Part_1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Part_2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Part_3"
                        });
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Store", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Store_1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Store_2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Store_3"
                        });
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.StorePart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PartId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.HasIndex("StoreId");

                    b.ToTable("StoreState", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PartId = 1,
                            Quantity = 1,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 2,
                            PartId = 2,
                            Quantity = 2,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 3,
                            PartId = 3,
                            Quantity = 3,
                            StoreId = 1
                        },
                        new
                        {
                            Id = 4,
                            PartId = 1,
                            Quantity = 1,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 5,
                            PartId = 3,
                            Quantity = 6,
                            StoreId = 2
                        },
                        new
                        {
                            Id = 6,
                            PartId = 1,
                            Quantity = 1,
                            StoreId = 3
                        });
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.Cart", b =>
                {
                    b.HasOne("ShoppingCart.SharedKernel.Persistence.Entities.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShoppingCart.SharedKernel.Persistence.Entities.Employee", "Employee")
                        .WithMany("Carts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.CartItem", b =>
                {
                    b.HasOne("ShoppingCart.SharedKernel.Persistence.Entities.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShoppingCart.SharedKernel.Persistence.Entities.Part", "Part")
                        .WithMany("CartItems")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ShoppingCart.SharedKernel.Persistence.ValueObjects.Price", "Price", b1 =>
                        {
                            b1.Property<Guid>("CartItemId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Cost")
                                .HasColumnType("integer")
                                .HasColumnName("PriceCost");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("character varying(5)")
                                .HasColumnName("PriceCurrency");

                            b1.HasKey("CartItemId");

                            b1.ToTable("CartItem");

                            b1.WithOwner()
                                .HasForeignKey("CartItemId");
                        });

                    b.Navigation("Cart");

                    b.Navigation("Part");

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.Customer", b =>
                {
                    b.OwnsMany("ShoppingCart.SharedKernel.Persistence.ValueObjects.Address", "Addresses", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("CustomerId")
                                .HasColumnType("integer");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("Id");

                            b1.HasIndex("CustomerId");

                            b1.ToTable("Customer_Addresses");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");

                            b1.HasData(
                                new
                                {
                                    Id = 1,
                                    City = "City_1",
                                    Country = "Country_1",
                                    CustomerId = 1,
                                    Number = "1",
                                    Street = "Street_1"
                                },
                                new
                                {
                                    Id = 2,
                                    City = "City_2",
                                    Country = "Country_2",
                                    CustomerId = 2,
                                    Number = "2",
                                    Street = "Street_2"
                                },
                                new
                                {
                                    Id = 3,
                                    City = "City_3",
                                    Country = "Country_3",
                                    CustomerId = 3,
                                    Number = "3",
                                    Street = "Street_3"
                                });
                        });

                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.Employee", b =>
                {
                    b.HasOne("ShoppingCart.SharedKernel.Persistence.Entities.Store", "Store")
                        .WithMany("Employees")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.Part", b =>
                {
                    b.OwnsOne("ShoppingCart.SharedKernel.Persistence.ValueObjects.Price", "Price", b1 =>
                        {
                            b1.Property<int>("PartId")
                                .HasColumnType("integer");

                            b1.Property<int>("Cost")
                                .HasPrecision(10, 3)
                                .HasColumnType("integer");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("character varying(5)");

                            b1.HasKey("PartId");

                            b1.ToTable("Part");

                            b1.WithOwner()
                                .HasForeignKey("PartId");

                            b1.HasData(
                                new
                                {
                                    PartId = 1,
                                    Cost = 10,
                                    Currency = "BAM"
                                },
                                new
                                {
                                    PartId = 2,
                                    Cost = 20,
                                    Currency = "BAM"
                                },
                                new
                                {
                                    PartId = 3,
                                    Cost = 30,
                                    Currency = "BAM"
                                });
                        });

                    b.OwnsOne("ShoppingCart.SharedKernel.Persistence.ValueObjects.Manufacturer", "Manufacturer", b1 =>
                        {
                            b1.Property<int>("PartId")
                                .HasColumnType("integer");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.HasKey("PartId");

                            b1.ToTable("Part");

                            b1.WithOwner()
                                .HasForeignKey("PartId");

                            b1.HasData(
                                new
                                {
                                    PartId = 1,
                                    Name = "Manufacturer_1"
                                },
                                new
                                {
                                    PartId = 2,
                                    Name = "Manufacturer_2"
                                },
                                new
                                {
                                    PartId = 3,
                                    Name = "Manufacturer_3"
                                });
                        });

                    b.Navigation("Manufacturer")
                        .IsRequired();

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.Store", b =>
                {
                    b.OwnsOne("ShoppingCart.SharedKernel.Persistence.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<int>("StoreId")
                                .HasColumnType("integer");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasMaxLength(5)
                                .HasColumnType("character varying(5)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");

                            b1.HasKey("StoreId");

                            b1.ToTable("Store");

                            b1.WithOwner()
                                .HasForeignKey("StoreId");

                            b1.HasData(
                                new
                                {
                                    StoreId = 1,
                                    City = "City_1",
                                    Country = "Country_1",
                                    Number = "1",
                                    Street = "Street_1"
                                },
                                new
                                {
                                    StoreId = 2,
                                    City = "City_2",
                                    Country = "Country_2",
                                    Number = "2",
                                    Street = "Street_2"
                                },
                                new
                                {
                                    StoreId = 3,
                                    City = "City_3",
                                    Country = "Country_3",
                                    Number = "3",
                                    Street = "Street_3"
                                });
                        });

                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.StorePart", b =>
                {
                    b.HasOne("ShoppingCart.SharedKernel.Persistence.Entities.Part", "Part")
                        .WithMany("StoreStates")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShoppingCart.SharedKernel.Persistence.Entities.Store", "Store")
                        .WithMany("StoreStates")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Part");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.Customer", b =>
                {
                    b.Navigation("Carts");
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.Employee", b =>
                {
                    b.Navigation("Carts");
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.Part", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("StoreStates");
                });

            modelBuilder.Entity("ShoppingCart.SharedKernel.Persistence.Entities.Store", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("StoreStates");
                });
#pragma warning restore 612, 618
        }
    }
}
